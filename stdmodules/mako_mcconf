#!/usr/bin/env python
import sys
import os
mcconf = "${relpath(vars.mcconf)}"
mcconf_dir = os.path.dirname(mcconf)

activate_this = os.path.join(mcconf_dir, 'env/bin/activate_this.py')
execfile(activate_this, dict(__file__=activate_this))

import toml
import argparse

# make sure that we are in the actual build path
os.chdir(os.path.dirname(sys.argv[0]))

parser = argparse.ArgumentParser()
parser.add_argument('-r', '--reconf', action = 'store_true')
parser.add_argument('-f', '--find')
args = parser.parse_args()

with open("mcconf.db", 'r') as fin:
    data = toml.load(fin)

if args.find:
    if args.find in data["files"]:
        sys.stdout.write(data["files"][args.find]+"\n")

elif args.reconf:
    # delete all generated files
    for f in data["files"]:
        if f != "mcconf" and f != "mcconf.db" and (os.path.exists(f) or os.path.islink(f)):
            os.unlink(f)

    # rerun mcconf
    cmd = mcconf+" -i "+data["vars"]["config_file"]+" -d ."
    sys.stderr.write('running command: '+cmd+"\n")
    os.system(cmd)
