% for var in files:
${var} = ${' '.join(sorted(files[var].keys()))}
${var}_OBJ = $(addsuffix .o, $(basename $(${var})))
DEP += $(addsuffix .d, $(basename $(${var})))
% endfor

MODULE_FILES = ${" ".join(set([os.path.relpath(allfiles[f].module.modulefile,dstdir) for f in allfiles]))}

DEPFLAGS += -MP -MMD -pipe
.PHONY: all clean cleanall

${includeModules('makefile_head', context)}

all: Makefile $(TARGETS)

${includeModules('makefile_body', context)}

% for var in files:
<% vprefix = replaceSuffix(var, "FILES", "_") %>\
  % for f in sorted(files[var].keys()):
    % if f.endswith(".cc"):
${replaceSuffix(f,".cc",".o")}: ${f}
	$(${vprefix}CXX) $(${vprefix}CXXFLAGS) $(${vprefix}CPPFLAGS) $(DEPFLAGS) -c -o $@ $<
    % endif
    % if f.endswith(".S"):
${replaceSuffix(f,".S",".o")}: ${f}
	$(${vprefix}AS) $(${vprefix}ASFLAGS) $(${vprefix}CPPFLAGS) $(DEPFLAGS) -c -o $@ $<
    % endif
  % endfor
% endfor

.PRECIOUS: Makefile
Makefile: ${os.path.relpath(vars.config_file, dstdir)} $(MODULE_FILES)
	./mcconf -r

clean:
% for var in files:
	- $(RM) $(${var}_OBJ)
% endfor
	- $(RM) $(TARGETS) $(EXTRATARGETS)

cleanall: clean
	- $(RM) $(DEP)

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(MAKECMDGOALS),cleanall)
-include $(DEP)
endif
endif
